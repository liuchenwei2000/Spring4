<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/jms
               http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!-- 使用 JmsInvokerServiceExporter 将 POJO 导出为基于 JMS 的服务 -->
    <bean id="alertServiceExporter" class="org.springframework.jms.remoting.JmsInvokerServiceExporter">
        <!-- 设置远程服务的实现 -->
        <property name="service" ref="alertService"/>
        <!-- 设置远程服务对外提供接口的全限定类名 -->
        <property name="serviceInterface" value="jms.rpc.AlertService"/>
    </bean>

    <!-- 实现 RPC 功能的实际上是一个 POJO -->
    <bean id="alertService" class="jms.rpc.server.AlertServiceImpl"/>

    <!--
    JmsInvokerServiceExporter 的属性并没有描述服务是基于 JMS 通信的细节，但它可以充当 JMS 监听器。
    为 JMS 监听器容器指定了连接工厂，所以它能够知道如何连接消息代理。
    -->
    <jms:listener-container connection-factory="connectionFactory">
        <jms:listener destination="rpc.queue" ref="alertServiceExporter" />
    </jms:listener-container>

    <bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
    </bean>
</beans>